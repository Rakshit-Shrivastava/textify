{"version":3,"sources":["Components/Form.js","Components/Navbar.js","Components/About.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","undoText","setUndoText","_useState5","_useState6","redoText","setRedoText","React","createElement","Fragment","className","data-bs-theme","mode","style","color","concat","placeholder","id","autoFocus","onChange","event","target","value","type","onClick","upperCase","toUpperCase","lowerCase","toLowerCase","newText","trim","split","join","navigator","clipboard","writeText","filter","ele","length","showAlert","Navbar","Link","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","role","changeMode","htmlFor","About","Alert","alert","message","App","setMode","setAlert","backgroundColor","Router","Routes","Route","path","element","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bdc9e2cf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const Form = (props) => {\r\n    const [text, setText] = useState(\"\");\r\n    const [undoText, setUndoText] = useState('');\r\n    const [redoText, setRedoText] = useState('');\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleUpperCase = () => {\r\n        setUndoText(text);\r\n        let upperCase = text.toUpperCase();\r\n        setText(upperCase);\r\n        setRedoText(upperCase)\r\n    }\r\n\r\n    const handleLowerCase = () => {\r\n        setUndoText(text);\r\n        let lowerCase = text.toLowerCase();\r\n        setText(lowerCase);\r\n        setRedoText(lowerCase)\r\n    }\r\n\r\n    const handleDeleteExtraSpace = () => {\r\n        setUndoText(text);\r\n        let newText = text.trim().split(/ +/).join(' ');\r\n        setText(newText);\r\n        setRedoText(newText)\r\n    }\r\n\r\n    const handleCopyText = () => {\r\n        navigator.clipboard.writeText(text);\r\n        if (text.split(/\\s+/).filter((ele) => { return ele.length !== 0 }).length === 0) {\r\n            props.showAlert('No text to copy, write something then try again...', 'danger');\r\n        } else {\r\n            props.showAlert('Text copied', 'success');\r\n        }\r\n\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setUndoText(text);\r\n        setText('');\r\n        setRedoText(text);\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        setText(undoText);\r\n        setRedoText(text);\r\n    }\r\n\r\n    const handleRedo = () => {\r\n        setText(redoText);\r\n        setUndoText(text);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container' data-bs-theme={props.mode}>\r\n                <h2 className='heading' style={{ color: `${props.mode === 'light' ? '#132022' : 'white'}` }}>A multipurpose text utility app</h2>\r\n                <div className=\"form-floating\">\r\n                    <textarea className=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" autoFocus onChange={handleOnChange} value={text}></textarea>\r\n                    {/* <label htmlFor=\"floatingTextarea\">Enter your text here</label> */}\r\n                </div>\r\n                <div className=\"d-grid gap-2 d-md-flex justify-content-md-start my-3\" >\r\n                    <button type=\"button\" className={`btn btn-${props.mode}`} onClick={handleUpperCase}>Upper Case</button>\r\n                    <button type=\"button\" className={`btn btn-${props.mode}`} onClick={handleLowerCase}>Lower Case</button>\r\n                    <button type=\"button\" className={`btn btn-${props.mode}`} onClick={handleDeleteExtraSpace}>Delete Extra Space</button>\r\n                    <button type=\"button\" className={`btn btn-${props.mode}`} onClick={handleCopyText}>Copy Text</button>\r\n                    <button type=\"button\" className={`btn btn-${props.mode}`} onClick={handleClear}>Clear Text</button>\r\n                    <button type=\"button\" className={`btn btn-${props.mode}`} onClick={handleUndo}>Undo</button>\r\n                    <button type=\"button\" className={`btn btn-${props.mode}`} onClick={handleRedo}>Redo</button>\r\n                </div>\r\n                <div className=\"card\" data-bs-theme={props.mode}>\r\n                    <div className=\"card-header\"><strong>Summary</strong></div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\"><strong>Total Words:</strong> {text.split(/\\s+/).filter((ele) => { return ele.length !== 0 }).length} words and {text.length} characters</li>\r\n                        <li className=\"list-group-item\"><strong>Total time to read:</strong> {text.split(/\\s+/).filter((ele) => { return ele.length !== 0 }).length ? 0.008 * text.split(/\\s+/).filter((ele) => { return ele.length !== 0 }).length + ' minutes' : \"Write something to calculate the time\"}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = (props) => {\r\n    // let {backgroundColor, color} = props.mode;\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg bg-body-tertiary\" data-bs-theme={props.mode} >\r\n                <div className=\"container-fluid\" >\r\n                    <Link className=\"navbar-brand\" to=\"/\" >Textify</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"form-check form-switch\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.changeMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div>\r\n      <section>\r\n      <div>\r\n        <h2>UpperCase</h2>\r\n        <p>Convert text to Capital letters</p>\r\n      </div>\r\n    </section>\r\n    <section className=\"section-2\">\r\n      <div>\r\n        <h2>LowerCase</h2>\r\n        <p>Convert text to Small letters</p>\r\n      </div>\r\n    </section>\r\n    <section className=\"section-3\">\r\n      <div>\r\n        <h2>Delete White Spaces</h2>\r\n        <p>Delete extra spaces from paragraph</p>\r\n      </div>\r\n    </section>\r\n    <section className=\"section-4\">\r\n      <div>\r\n        <h2>Copy Text</h2>\r\n        <p>Copy text to clipboard</p>\r\n      </div>\r\n    </section>\r\n    <section className=\"section-5\">\r\n      <div>\r\n        <h2>Clear Text</h2>\r\n        <p>Clear the written text</p>\r\n      </div>\r\n    </section>\r\n    <section className=\"section-6\">\r\n      <div>\r\n        <h2>Undo and Redo</h2>\r\n        <p>Undo and Redo functionality</p>\r\n      </div>\r\n    </section>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport const Alert = (props) => {\r\n    return (\r\n        <div className=\"alert\">\r\n            {props.alert && <div>\r\n                <div className={`alert alert-${props.alert.type} d-flex align-items-center`} role=\"alert\">\r\n                    {props.alert.message}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from \"react\";\nimport { Form } from './Components/Form';\nimport { Navbar } from './Components/Navbar';\nimport { About } from './Components/About';\nimport { Alert } from \"./Components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const changeMode = () => {\n    if (mode === 'light')\n      setMode('dark');\n    else {\n      setMode('light');\n    }\n  }\n\n  const showAlert = (message, type) => {\n      setAlert({\n        message: message,\n        type: type\n      });\n      setTimeout(() => {\n        setAlert(null);\n      }, 3000);\n  };\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  return (\n    <div className='app' style={{ backgroundColor: `${mode === 'light' ? 'white' : '#132022'}` }}>\n      <Router>\n        <Navbar changeMode={changeMode} mode={mode} />\n        <Alert alert={alert}/>\n        <Routes>\n          <Route path=\"/\" element={<Form mode={mode} showAlert={showAlert} />} />\n          <Route path=\"/about\" element={<About />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}